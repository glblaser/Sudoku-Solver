const express = require('express');
const bodyParser = require('body-parser');
const path = require('path');
const mongoose = require('mongoose')
const app = express();
require('dotenv').config()
const { Puzzle } = require('../database/index.js')

mongoose.connect(`mongodb+srv://${process.env.MONGO_USER}:${process.env.MONGO_PW}@cluster0-tvfyb.mongodb.net/Sudoku?retryWrites=true&w=majority`, { useNewUrlParser: true });

// var db = mongoose.connection;
// db.on('error', console.error.bind(console, 'connection error:'));
// db.once('open', function() {
//   console.log('connected')
// });

const port = process.env.PORT || 3000;
app.use(express.static("dist"));
app.use(
  bodyParser.json({
    strict: false
  })
);

// const puzzles = [
//   {quizzes: "004300209005009001070060043006002087190007400050083000600000105003508690042910300",
//   solutions: "864371259325849761971265843436192587198657432257483916689734125713528694542916378"},
//   {quizzes: "040100050107003960520008000000000017000906800803050620090060543600080700250097100",
//   solutions: "346179258187523964529648371965832417472916835813754629798261543631485792254397186"},
//   {quizzes: "600120384008459072000006005000264030070080006940003000310000050089700000502000190",
//   solutions: "695127384138459672724836915851264739273981546946573821317692458489715263562348197"},
//   {quizzes: "497200000100400005000016098620300040300900000001072600002005870000600004530097061",
//   solutions: "497258316186439725253716498629381547375964182841572639962145873718623954534897261"},
//   {quizzes: "005910308009403060027500100030000201000820007006007004000080000640150700890000420",
//   solutions: "465912378189473562327568149738645291954821637216397854573284916642159783891736425"},
//   {quizzes: "100005007380900000600000480820001075040760020069002001005039004000020100000046352",
//   solutions: "194685237382974516657213489823491675541768923769352841215839764436527198978146352"},
//   {quizzes: "009065430007000800600108020003090002501403960804000100030509007056080000070240090",
//   solutions: "289765431317924856645138729763891542521473968894652173432519687956387214178246395"},
//   {quizzes: "000000657702400100350006000500020009210300500047109008008760090900502030030018206",
//   solutions: "894231657762495183351876942583624719219387564647159328128763495976542831435918276"},
//   {quizzes: "503070190000006750047190600400038000950200300000010072000804001300001860086720005",
//   solutions: "563472198219386754847195623472638519951247386638519472795864231324951867186723945"},
//   {quizzes: "060720908084003001700100065900008000071060000002010034000200706030049800215000090",
//   solutions: "163725948584693271729184365946358127371462589852917634498231756637549812215876493"}
// ]

app.get('/puzzle', (req, res) => {
  let random = Math.floor(Math.random() * (5000)) + 1
  Puzzle.find({ "number": random })
  .exec()
  .then(results => {
    let quiz = results[0].quizzes
    quiz = quiz.split('').map(ele => parseInt(ele))
    let quizMatrix = []
    for (let i=0; i<quiz.length; i+=9) {
      quizMatrix.push(quiz.slice(i, i+9))
    }
  
    let solution = results[0].solutions
    solution = solution.split('').map(ele => parseInt(ele))
    let solutionMatrix = []
    for (let i=0; i<solution.length; i+=9) {
      solutionMatrix.push(solution.slice(i, i+9)) 
    }
    res.send({quiz: quizMatrix, solution: solutionMatrix})
  })
  .catch(err => {
    console.log('error is: ',err)
    res.end()
  })
})

app.listen(port, () => {
  console.log(`The shenanigans have started on aisle ${port}`);
});
